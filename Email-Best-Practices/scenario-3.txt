scenario:

	**request clarification on task requirements from your team lead**

	you're an entry-level software engineer assigned to develop a small feature
	for a web app your team is working on. it involves implementing a new form
	wherein users can submit feedback. however, the task description provided
	by the lead is a bit vague, and you're not sure what fields the forms
	should include or how the data should be handled. request clarification
	from the lead on the specific requirements so that you may proceed with
	confidence

################################################################

subject:

	request for clarification on feedback form fields and data handling

################################################################

greeting:

	John Doe (Team Lead),

body:

	given that i was tasked with creating the feedback form, and few details
	where given, i was wondering a few things about which fields to include,
	what rules for each, and where to sendoff or store the data.  i also have a
	question or two about the form's overall context. is there some
	documentation i missed ?

	i looked at how various other websites have done it, and i have come up with
	few ideas; i even have a preliminary prototype, but i wanted to verify with
	you on what the end-result should be.

	i present my inquiries chronologically here:

	- should the visitor already be logged in ?
	- which fields should be required ?
	- should we mandate they select a category (corresponding to our various
	  departments and teams)
		- for example, "product review" could be sent to marketing, "feature
		  request" could be sent to the development team, "bugs" to QA, etc.
	- once the form is submitted where should it go ?
	  	- is there already a predefined destination ?
		- should i create a new internal database ?
			- who should manage it, who can access it ?
	- furthermore, i could automate internal emails that would notify the
	  relevant unit about feedback they could take a look at

	overall how should this new feature fit into the current way we do things ?
	am i over-extending something that should be simpler and more
	straightforward here ?

sign-off:

	Regards,
	Jose N. Olmos
	Entry-level Software Engineer
	918.703.1949
	jose.olmos@atlasschool.com
